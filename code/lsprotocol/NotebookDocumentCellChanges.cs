// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// 
// THIS FILE IS AUTOGENERATED, DO NOT MODIFY IT

using Newtonsoft.Json;
using System.Collections.Immutable;
using System.Runtime.Serialization;

namespace Microsoft.LanguageServer.Protocol {
    /// <summary>
    /// Cell changes to a notebook document.
    /// 
    /// </summary>
    [Proposed]
    [Since("3.18.0")]
    [DataContract]
    public record NotebookDocumentCellChanges
    {
        [JsonConstructor]
        public NotebookDocumentCellChanges(
            NotebookDocumentCellChangeStructure? structure = null,
            ImmutableArray<NotebookCell> data = default!,
            ImmutableArray<NotebookDocumentCellContentChanges> textContent = default!
        )
        {
            Structure = structure;
            Data = data;
            TextContent = textContent;
        }
        /// <summary>
        /// Changes to the cell structure to add or
        /// remove cells.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "structure")]
        public NotebookDocumentCellChangeStructure? Structure { get; init; }
        /// <summary>
        /// Changes to notebook cells properties like its
        /// kind, execution summary or metadata.
        /// </summary>
        [JsonConverter(typeof(CustomArrayConverter<NotebookCell>))]
        [DataMember(Name = "data")]
        public ImmutableArray<NotebookCell> Data { get; init; }
        /// <summary>
        /// Changes to the text content of notebook cells.
        /// </summary>
        [JsonConverter(typeof(CustomArrayConverter<NotebookDocumentCellContentChanges>))]
        [DataMember(Name = "textContent")]
        public ImmutableArray<NotebookDocumentCellContentChanges> TextContent { get; init; }
    }

}
