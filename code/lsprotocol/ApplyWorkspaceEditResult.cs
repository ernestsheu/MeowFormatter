// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// 
// THIS FILE IS AUTOGENERATED, DO NOT MODIFY IT

using Newtonsoft.Json;
using System.Runtime.Serialization;

namespace Microsoft.LanguageServer.Protocol {
    /// <summary>
    /// The result returned from the apply workspace edit request.
    /// 
    /// </summary>
    [Since("3.17 renamed from ApplyWorkspaceEditResponse")]
    [DataContract]
    public record ApplyWorkspaceEditResult
    {
        [JsonConstructor]
        public ApplyWorkspaceEditResult(
            bool applied,
            string? failureReason = null,
            long? failedChange = null
        )
        {
            Applied = applied;
            FailureReason = failureReason;
            FailedChange = failedChange;
        }
        /// <summary>
        /// Indicates whether the edit was applied or not.
        /// </summary>
        [DataMember(Name = "applied")]
        public bool Applied { get; init; }
        /// <summary>
        /// An optional textual description for why the edit was not applied.
        /// This may be used by the server for diagnostic logging or to provide
        /// a suitable error for a request that triggered the edit.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "failureReason")]
        public string? FailureReason { get; init; }
        /// <summary>
        /// Depending on the client's failure handling strategy `failedChange` might
        /// contain the index of the change that failed. This property is only available
        /// if the client signals a `failureHandlingStrategy` in its client capabilities.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "failedChange")]
        public long? FailedChange { get => failedChange; set => failedChange = Validators.validUInteger(value); }
        private long? failedChange;
    }

}
