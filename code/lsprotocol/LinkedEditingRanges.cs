// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// 
// THIS FILE IS AUTOGENERATED, DO NOT MODIFY IT

using Newtonsoft.Json;
using System.Collections.Immutable;
using System.Runtime.Serialization;

namespace Microsoft.LanguageServer.Protocol {
    /// <summary>
    /// The result of a linked editing range request.
    /// 
    /// </summary>
    [Since("3.16.0")]
    [DataContract]
    public record LinkedEditingRanges
    {
        [JsonConstructor]
        public LinkedEditingRanges(
            ImmutableArray<Range> ranges,
            string? wordPattern = null
        )
        {
            Ranges = ranges;
            WordPattern = wordPattern;
        }
        /// <summary>
        /// A list of ranges that can be edited together. The ranges must have
        /// identical length and contain identical text content. The ranges cannot overlap.
        /// </summary>
        [JsonConverter(typeof(CustomArrayConverter<Range>))]
        [DataMember(Name = "ranges")]
        public ImmutableArray<Range> Ranges { get; init; }
        /// <summary>
        /// An optional word pattern (regular expression) that describes valid contents for
        /// the given ranges. If no pattern is provided, the client configuration's word
        /// pattern will be used.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "wordPattern")]
        public string? WordPattern { get; init; }
    }

}
