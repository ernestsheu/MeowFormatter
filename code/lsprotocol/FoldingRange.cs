// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// 
// THIS FILE IS AUTOGENERATED, DO NOT MODIFY IT

using Newtonsoft.Json;
using System.Runtime.Serialization;

namespace Microsoft.LanguageServer.Protocol {
    /// <summary>
    /// Represents a folding range. To be valid, start and end line must be bigger than zero and smaller
    /// than the number of lines in the document. Clients are free to ignore invalid ranges.
    /// </summary>
    [DataContract]
    public record FoldingRange
    {
        [JsonConstructor]
        public FoldingRange(
            long startLine,
            long endLine,
            long? startCharacter = null,
            long? endCharacter = null,
            string? kind = null,
            string? collapsedText = null
        )
        {
            StartLine = startLine;
            StartCharacter = startCharacter;
            EndLine = endLine;
            EndCharacter = endCharacter;
            Kind = kind;
            CollapsedText = collapsedText;
        }
        /// <summary>
        /// The zero-based start line of the range to fold. The folded area starts after the line's last character.
        /// To be valid, the end must be zero or larger and smaller than the number of lines in the document.
        /// </summary>
        [DataMember(Name = "startLine")]
        public long StartLine { get => startLine; set => startLine = Validators.validUInteger(value); }
        private long startLine;
        /// <summary>
        /// The zero-based character offset from where the folded range starts. If not defined, defaults to the length of the start line.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "startCharacter")]
        public long? StartCharacter { get => startCharacter; set => startCharacter = Validators.validUInteger(value); }
        private long? startCharacter;
        /// <summary>
        /// The zero-based end line of the range to fold. The folded area ends with the line's last character.
        /// To be valid, the end must be zero or larger and smaller than the number of lines in the document.
        /// </summary>
        [DataMember(Name = "endLine")]
        public long EndLine { get => endLine; set => endLine = Validators.validUInteger(value); }
        private long endLine;
        /// <summary>
        /// The zero-based character offset before the folded range ends. If not defined, defaults to the length of the end line.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "endCharacter")]
        public long? EndCharacter { get => endCharacter; set => endCharacter = Validators.validUInteger(value); }
        private long? endCharacter;
        /// <summary>
        /// Describes the kind of the folding range such as 'comment' or 'region'. The kind
        /// is used to categorize folding ranges and used by commands like 'Fold all comments'.
        /// See <see cref="FoldingRangeKind" /> for an enumeration of standardized kinds.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "kind")]
        public string? Kind { get; init; }
        /// <summary>
        /// The text that the client should show when the specified range is
        /// collapsed. If not defined or not supported by the client, a default
        /// will be chosen by the client.
        /// 
        /// </summary>
        [Since("3.17.0")]
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "collapsedText")]
        public string? CollapsedText { get; init; }
    }

}
