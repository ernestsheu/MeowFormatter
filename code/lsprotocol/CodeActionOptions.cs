// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// 
// THIS FILE IS AUTOGENERATED, DO NOT MODIFY IT

using Newtonsoft.Json;
using System.Collections.Immutable;
using System.Runtime.Serialization;

namespace Microsoft.LanguageServer.Protocol {
    /// <summary>
    /// Provider options for a <see cref="CodeActionRequest" />.
    /// </summary>
    [DataContract]
    public record CodeActionOptions
    {
        [JsonConstructor]
        public CodeActionOptions(
            ImmutableArray<string> codeActionKinds = default!,
            ImmutableArray<CodeActionKindDocumentation> documentation = default!,
            bool? resolveProvider = null,
            bool? workDoneProgress = null
        )
        {
            CodeActionKinds = codeActionKinds;
            Documentation = documentation;
            ResolveProvider = resolveProvider;
            WorkDoneProgress = workDoneProgress;
        }
        /// <summary>
        /// CodeActionKinds that this server may return.
        /// 
        /// The list of kinds may be generic, such as `CodeActionKind.Refactor`, or the server
        /// may list out every specific kind they provide.
        /// </summary>
        [JsonConverter(typeof(CustomArrayConverter<string>))]
        [DataMember(Name = "codeActionKinds")]
        public ImmutableArray<string> CodeActionKinds { get; init; }
        /// <summary>
        /// Static documentation for a class of code actions.
        /// 
        /// Documentation from the provider should be shown in the code actions menu if either:
        /// 
        /// - Code actions of `kind` are requested by the editor. In this case, the editor will show the documentation that
        ///   most closely matches the requested code action kind. For example, if a provider has documentation for
        ///   both `Refactor` and `RefactorExtract`, when the user requests code actions for `RefactorExtract`,
        ///   the editor will use the documentation for `RefactorExtract` instead of the documentation for `Refactor`.
        /// 
        /// - Any code actions of `kind` are returned by the provider.
        /// 
        /// At most one documentation entry should be shown per provider.
        /// 
        /// </summary>
        [Proposed]
        [Since("3.18.0")]
        [JsonConverter(typeof(CustomArrayConverter<CodeActionKindDocumentation>))]
        [DataMember(Name = "documentation")]
        public ImmutableArray<CodeActionKindDocumentation> Documentation { get; init; }
        /// <summary>
        /// The server provides support to resolve additional
        /// information for a code action.
        /// 
        /// </summary>
        [Since("3.16.0")]
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "resolveProvider")]
        public bool? ResolveProvider { get; init; }
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "workDoneProgress")]
        public bool? WorkDoneProgress { get; init; }
    }

}
