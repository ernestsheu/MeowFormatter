// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// 
// THIS FILE IS AUTOGENERATED, DO NOT MODIFY IT

using Newtonsoft.Json;
using System.Runtime.Serialization;

namespace Microsoft.LanguageServer.Protocol {
    [DataContract]
    public record TextDocumentSyncClientCapabilities
    {
        [JsonConstructor]
        public TextDocumentSyncClientCapabilities(
            bool? dynamicRegistration = null,
            bool? willSave = null,
            bool? willSaveWaitUntil = null,
            bool? didSave = null
        )
        {
            DynamicRegistration = dynamicRegistration;
            WillSave = willSave;
            WillSaveWaitUntil = willSaveWaitUntil;
            DidSave = didSave;
        }
        /// <summary>
        /// Whether text document synchronization supports dynamic registration.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "dynamicRegistration")]
        public bool? DynamicRegistration { get; init; }
        /// <summary>
        /// The client supports sending will save notifications.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "willSave")]
        public bool? WillSave { get; init; }
        /// <summary>
        /// The client supports sending a will save request and
        /// waits for a response providing text edits which will
        /// be applied to the document before it is saved.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "willSaveWaitUntil")]
        public bool? WillSaveWaitUntil { get; init; }
        /// <summary>
        /// The client supports did save notifications.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "didSave")]
        public bool? DidSave { get; init; }
    }

}
