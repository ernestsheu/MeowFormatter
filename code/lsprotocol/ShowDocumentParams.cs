// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// 
// THIS FILE IS AUTOGENERATED, DO NOT MODIFY IT

using Newtonsoft.Json;
using System.Runtime.Serialization;

namespace Microsoft.LanguageServer.Protocol {
    /// <summary>
    /// Params to show a resource in the UI.
    /// 
    /// </summary>
    [Since("3.16.0")]
    [DataContract]
    public record ShowDocumentParams
    {
        [JsonConstructor]
        public ShowDocumentParams(
            Uri uri,
            bool? external = null,
            bool? takeFocus = null,
            Range? selection = null
        )
        {
            Uri = uri;
            External = external;
            TakeFocus = takeFocus;
            Selection = selection;
        }
        /// <summary>
        /// The uri to show.
        /// </summary>
        [JsonConverter(typeof(CustomStringConverter<Uri>))]
        [DataMember(Name = "uri")]
        public Uri Uri { get; init; }
        /// <summary>
        /// Indicates to show the resource in an external program.
        /// To show, for example, `https://code.visualstudio.com/`
        /// in the default WEB browser set `external` to `true`.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "external")]
        public bool? External { get; init; }
        /// <summary>
        /// An optional property to indicate whether the editor
        /// showing the document should take focus or not.
        /// Clients might ignore this property if an external
        /// program is started.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "takeFocus")]
        public bool? TakeFocus { get; init; }
        /// <summary>
        /// An optional selection range if the document is a text
        /// document. Clients might ignore the property if an
        /// external program is started or the file is not a text
        /// file.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "selection")]
        public Range? Selection { get; init; }
    }

}
