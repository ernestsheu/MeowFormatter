// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// 
// THIS FILE IS AUTOGENERATED, DO NOT MODIFY IT

using Newtonsoft.Json;
using System.Runtime.Serialization;

namespace Microsoft.LanguageServer.Protocol {
    /// <summary>
    /// Value-object describing what options formatting should use.
    /// </summary>
    [DataContract]
    public record FormattingOptions
    {
        [JsonConstructor]
        public FormattingOptions(
            long tabSize,
            bool insertSpaces,
            bool? trimTrailingWhitespace = null,
            bool? insertFinalNewline = null,
            bool? trimFinalNewlines = null
        )
        {
            TabSize = tabSize;
            InsertSpaces = insertSpaces;
            TrimTrailingWhitespace = trimTrailingWhitespace;
            InsertFinalNewline = insertFinalNewline;
            TrimFinalNewlines = trimFinalNewlines;
        }
        /// <summary>
        /// Size of a tab in spaces.
        /// </summary>
        [DataMember(Name = "tabSize")]
        public long TabSize { get => tabSize; set => tabSize = Validators.validUInteger(value); }
        private long tabSize;
        /// <summary>
        /// Prefer spaces over tabs.
        /// </summary>
        [DataMember(Name = "insertSpaces")]
        public bool InsertSpaces { get; init; }
        /// <summary>
        /// Trim trailing whitespace on a line.
        /// 
        /// </summary>
        [Since("3.15.0")]
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "trimTrailingWhitespace")]
        public bool? TrimTrailingWhitespace { get; init; }
        /// <summary>
        /// Insert a newline character at the end of the file if one does not exist.
        /// 
        /// </summary>
        [Since("3.15.0")]
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "insertFinalNewline")]
        public bool? InsertFinalNewline { get; init; }
        /// <summary>
        /// Trim all newlines after the final newline at the end of the file.
        /// 
        /// </summary>
        [Since("3.15.0")]
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "trimFinalNewlines")]
        public bool? TrimFinalNewlines { get; init; }
    }

}
