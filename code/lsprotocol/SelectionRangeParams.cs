// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// 
// THIS FILE IS AUTOGENERATED, DO NOT MODIFY IT

using Newtonsoft.Json;
using System.Collections.Immutable;
using System.Runtime.Serialization;

namespace Microsoft.LanguageServer.Protocol {
    /// <summary>
    /// A parameter literal used in selection range requests.
    /// </summary>
    [DataContract]
    public record SelectionRangeParams
    {
        [JsonConstructor]
        public SelectionRangeParams(
            TextDocumentIdentifier textDocument,
            ImmutableArray<Position> positions,
            ProgressToken? workDoneToken = null,
            ProgressToken? partialResultToken = null
        )
        {
            TextDocument = textDocument;
            Positions = positions;
            WorkDoneToken = workDoneToken;
            PartialResultToken = partialResultToken;
        }
        /// <summary>
        /// The text document.
        /// </summary>
        [DataMember(Name = "textDocument")]
        public TextDocumentIdentifier TextDocument { get; init; }
        /// <summary>
        /// The positions inside the text document.
        /// </summary>
        [JsonConverter(typeof(CustomArrayConverter<Position>))]
        [DataMember(Name = "positions")]
        public ImmutableArray<Position> Positions { get; init; }
        /// <summary>
        /// An optional token that a server can use to report work done progress.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "workDoneToken")]
        public ProgressToken? WorkDoneToken { get; init; }
        /// <summary>
        /// An optional token that a server can use to report partial results (e.g. streaming) to
        /// the client.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "partialResultToken")]
        public ProgressToken? PartialResultToken { get; init; }
    }

}
