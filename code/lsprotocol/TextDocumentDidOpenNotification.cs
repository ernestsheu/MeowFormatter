// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// 
// THIS FILE IS AUTOGENERATED, DO NOT MODIFY IT

using Newtonsoft.Json;
using System.Runtime.Serialization;

namespace Microsoft.LanguageServer.Protocol {
    /// <summary>
    /// The document open notification is sent from the client to the server to signal
    /// newly opened text documents. The document's truth is now managed by the client
    /// and the server must not try to read the document's truth using the document's
    /// uri. Open in this sense means it is managed by the client. It doesn't necessarily
    /// mean that its content is presented in an editor. An open notification must not
    /// be sent more than once without a corresponding close notification send before.
    /// This means open and close notification must be balanced and the max open count
    /// is one.
    /// </summary>
    [Direction(MessageDirection.ServerToClient)]
    [DataContract]
    public record TextDocumentDidOpenNotification: INotification<DidOpenTextDocumentParams>
    {
        [JsonConstructor]
        public TextDocumentDidOpenNotification(
            string method,
            DidOpenTextDocumentParams paramsValue,
            string jsonrpc = "2.0"
        )
        {
            JsonRPC = jsonrpc;
            Method = method;
            Params = paramsValue;
        }
        /// <summary>
        /// The jsonrpc version.
        /// </summary>
        [DataMember(Name = "jsonrpc")]
        public string JsonRPC { get; init; } = "2.0";
        /// <summary>
        /// The Notification method.
        /// </summary>
        [DataMember(Name = "method")]
        public string Method { get; init; }
        /// <summary>
        /// The Notification parameters.
        /// </summary>
        [DataMember(Name = "params")]
        public DidOpenTextDocumentParams Params { get; init; }
    }

}
