// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// 
// THIS FILE IS AUTOGENERATED, DO NOT MODIFY IT

using Newtonsoft.Json;
using System.Runtime.Serialization;

namespace Microsoft.LanguageServer.Protocol {
    /// <summary>
    /// Client Capabilities for a <see cref="DocumentSymbolRequest" />.
    /// </summary>
    [DataContract]
    public record DocumentSymbolClientCapabilities
    {
        [JsonConstructor]
        public DocumentSymbolClientCapabilities(
            bool? dynamicRegistration = null,
            ClientSymbolKindOptions? symbolKind = null,
            bool? hierarchicalDocumentSymbolSupport = null,
            ClientSymbolTagOptions? tagSupport = null,
            bool? labelSupport = null
        )
        {
            DynamicRegistration = dynamicRegistration;
            SymbolKind = symbolKind;
            HierarchicalDocumentSymbolSupport = hierarchicalDocumentSymbolSupport;
            TagSupport = tagSupport;
            LabelSupport = labelSupport;
        }
        /// <summary>
        /// Whether document symbol supports dynamic registration.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "dynamicRegistration")]
        public bool? DynamicRegistration { get; init; }
        /// <summary>
        /// Specific capabilities for the `SymbolKind` in the
        /// `textDocument/documentSymbol` request.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "symbolKind")]
        public ClientSymbolKindOptions? SymbolKind { get; init; }
        /// <summary>
        /// The client supports hierarchical document symbols.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "hierarchicalDocumentSymbolSupport")]
        public bool? HierarchicalDocumentSymbolSupport { get; init; }
        /// <summary>
        /// The client supports tags on `SymbolInformation`. Tags are supported on
        /// `DocumentSymbol` if `hierarchicalDocumentSymbolSupport` is set to true.
        /// Clients supporting tags have to handle unknown tags gracefully.
        /// 
        /// </summary>
        [Since("3.16.0")]
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "tagSupport")]
        public ClientSymbolTagOptions? TagSupport { get; init; }
        /// <summary>
        /// The client supports an additional label presented in the UI when
        /// registering a document symbol provider.
        /// 
        /// </summary>
        [Since("3.16.0")]
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "labelSupport")]
        public bool? LabelSupport { get; init; }
    }

}
