// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// 
// THIS FILE IS AUTOGENERATED, DO NOT MODIFY IT

using Newtonsoft.Json;
using System.Collections.Immutable;
using System.Runtime.Serialization;

namespace Microsoft.LanguageServer.Protocol {
    /// <summary>
    /// Structural changes to cells in a notebook document.
    /// 
    /// </summary>
    [Proposed]
    [Since("3.18.0")]
    [DataContract]
    public record NotebookDocumentCellChangeStructure
    {
        [JsonConstructor]
        public NotebookDocumentCellChangeStructure(
            NotebookCellArrayChange array,
            ImmutableArray<TextDocumentItem> didOpen = default!,
            ImmutableArray<TextDocumentIdentifier> didClose = default!
        )
        {
            Array = array;
            DidOpen = didOpen;
            DidClose = didClose;
        }
        /// <summary>
        /// The change to the cell array.
        /// </summary>
        [DataMember(Name = "array")]
        public NotebookCellArrayChange Array { get; init; }
        /// <summary>
        /// Additional opened cell text documents.
        /// </summary>
        [JsonConverter(typeof(CustomArrayConverter<TextDocumentItem>))]
        [DataMember(Name = "didOpen")]
        public ImmutableArray<TextDocumentItem> DidOpen { get; init; }
        /// <summary>
        /// Additional closed cell text documents.
        /// </summary>
        [JsonConverter(typeof(CustomArrayConverter<TextDocumentIdentifier>))]
        [DataMember(Name = "didClose")]
        public ImmutableArray<TextDocumentIdentifier> DidClose { get; init; }
    }

}
