// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// 
// THIS FILE IS AUTOGENERATED, DO NOT MODIFY IT

using Newtonsoft.Json;
using System.Runtime.Serialization;

namespace Microsoft.LanguageServer.Protocol {
    /// <summary>
    /// The document close notification is sent from the client to the server when
    /// the document got closed in the client. The document's truth now exists where
    /// the document's uri points to (e.g. if the document's uri is a file uri the
    /// truth now exists on disk). As with the open notification the close notification
    /// is about managing the document's content. Receiving a close notification
    /// doesn't mean that the document was open in an editor before. A close
    /// notification requires a previous open notification to be sent.
    /// </summary>
    [Direction(MessageDirection.ServerToClient)]
    [DataContract]
    public record TextDocumentDidCloseNotification: INotification<DidCloseTextDocumentParams>
    {
        [JsonConstructor]
        public TextDocumentDidCloseNotification(
            string method,
            DidCloseTextDocumentParams paramsValue,
            string jsonrpc = "2.0"
        )
        {
            JsonRPC = jsonrpc;
            Method = method;
            Params = paramsValue;
        }
        /// <summary>
        /// The jsonrpc version.
        /// </summary>
        [DataMember(Name = "jsonrpc")]
        public string JsonRPC { get; init; } = "2.0";
        /// <summary>
        /// The Notification method.
        /// </summary>
        [DataMember(Name = "method")]
        public string Method { get; init; }
        /// <summary>
        /// The Notification parameters.
        /// </summary>
        [DataMember(Name = "params")]
        public DidCloseTextDocumentParams Params { get; init; }
    }

}
