// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// 
// THIS FILE IS AUTOGENERATED, DO NOT MODIFY IT

using Newtonsoft.Json;
using System.Runtime.Serialization;

namespace Microsoft.LanguageServer.Protocol {
    /// <summary>
    /// </summary>
    [Since("3.16.0")]
    [DataContract]
    public record SemanticTokensOptions
    {
        [JsonConstructor]
        public SemanticTokensOptions(
            SemanticTokensLegend legend,
            OrType<bool, LSPObject>? range = null,
            OrType<bool, SemanticTokensFullDelta>? full = null,
            bool? workDoneProgress = null
        )
        {
            Legend = legend;
            Range = range;
            Full = full;
            WorkDoneProgress = workDoneProgress;
        }
        /// <summary>
        /// The legend used by the server
        /// </summary>
        [DataMember(Name = "legend")]
        public SemanticTokensLegend Legend { get; init; }
        /// <summary>
        /// Server supports providing semantic tokens for a specific range
        /// of a document.
        /// </summary>
        [JsonConverter(typeof(OrTypeConverter<bool, LSPObject>))]
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "range")]
        public OrType<bool, LSPObject>? Range { get; init; }
        /// <summary>
        /// Server supports providing semantic tokens for a full document.
        /// </summary>
        [JsonConverter(typeof(OrTypeConverter<bool, SemanticTokensFullDelta>))]
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "full")]
        public OrType<bool, SemanticTokensFullDelta>? Full { get; init; }
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "workDoneProgress")]
        public bool? WorkDoneProgress { get; init; }
    }

}
