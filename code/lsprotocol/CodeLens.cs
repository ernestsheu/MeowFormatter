// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// 
// THIS FILE IS AUTOGENERATED, DO NOT MODIFY IT

using Newtonsoft.Json;
using System.Runtime.Serialization;

namespace Microsoft.LanguageServer.Protocol {
    /// <summary>
    /// A code lens represents a <see cref="Command">command</see> that should be shown along with
    /// source text, like the number of references, a way to run tests, etc.
    /// 
    /// A code lens is _unresolved_ when no command is associated to it. For performance
    /// reasons the creation of a code lens and resolving should be done in two stages.
    /// </summary>
    [DataContract]
    public record CodeLens
    {
        [JsonConstructor]
        public CodeLens(
            Range range,
            CommandAction? command = null,
            LSPAny? data = null
        )
        {
            Range = range;
            Command = command;
            Data = data;
        }
        /// <summary>
        /// The range in which this code lens is valid. Should only span a single line.
        /// </summary>
        [DataMember(Name = "range")]
        public Range Range { get; init; }
        /// <summary>
        /// The command this code lens represents.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "command")]
        public CommandAction? Command { get; init; }
        /// <summary>
        /// A data entry field that is preserved on a code lens item between
        /// a <see cref="CodeLensRequest" /> and a <see cref="CodeLensResolveRequest" />
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "data")]
        public LSPAny? Data { get; init; }
    }

}
