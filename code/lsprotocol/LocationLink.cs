// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// 
// THIS FILE IS AUTOGENERATED, DO NOT MODIFY IT

using Newtonsoft.Json;
using System.Runtime.Serialization;

namespace Microsoft.LanguageServer.Protocol {
    /// <summary>
    /// Represents the connection of two locations. Provides additional metadata over normal <see cref="Location">locations</see>,
    /// including an origin range.
    /// </summary>
    [DataContract]
    public record LocationLink
    {
        [JsonConstructor]
        public LocationLink(
            Uri targetUri,
            Range targetRange,
            Range targetSelectionRange,
            Range? originSelectionRange = null
        )
        {
            OriginSelectionRange = originSelectionRange;
            TargetUri = targetUri;
            TargetRange = targetRange;
            TargetSelectionRange = targetSelectionRange;
        }
        /// <summary>
        /// Span of the origin of this link.
        /// 
        /// Used as the underlined span for mouse interaction. Defaults to the word range at
        /// the definition position.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "originSelectionRange")]
        public Range? OriginSelectionRange { get; init; }
        /// <summary>
        /// The target resource identifier of this link.
        /// </summary>
        [JsonConverter(typeof(CustomStringConverter<Uri>))]
        [DataMember(Name = "targetUri")]
        public Uri TargetUri { get; init; }
        /// <summary>
        /// The full target range of this link. If the target for example is a symbol then target range is the
        /// range enclosing this symbol not including leading/trailing whitespace but everything else
        /// like comments. This information is typically used to highlight the range in the editor.
        /// </summary>
        [DataMember(Name = "targetRange")]
        public Range TargetRange { get; init; }
        /// <summary>
        /// The range that should be selected and revealed when this link is being followed, e.g the name of a function.
        /// Must be contained by the `targetRange`. See also `DocumentSymbol#range`
        /// </summary>
        [DataMember(Name = "targetSelectionRange")]
        public Range TargetSelectionRange { get; init; }
    }

}
