// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// 
// THIS FILE IS AUTOGENERATED, DO NOT MODIFY IT

using Newtonsoft.Json;
using System.Runtime.Serialization;

namespace Microsoft.LanguageServer.Protocol {
    /// <summary>
    /// </summary>
    [Proposed]
    [Since("3.18.0")]
    [DataContract]
    public record ClientSemanticTokensRequestOptions
    {
        [JsonConstructor]
        public ClientSemanticTokensRequestOptions(
            OrType<bool, LSPObject>? range = null,
            OrType<bool, ClientSemanticTokensRequestFullDelta>? full = null
        )
        {
            Range = range;
            Full = full;
        }
        /// <summary>
        /// The client will send the `textDocument/semanticTokens/range` request if
        /// the server provides a corresponding handler.
        /// </summary>
        [JsonConverter(typeof(OrTypeConverter<bool, LSPObject>))]
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "range")]
        public OrType<bool, LSPObject>? Range { get; init; }
        /// <summary>
        /// The client will send the `textDocument/semanticTokens/full` request if
        /// the server provides a corresponding handler.
        /// </summary>
        [JsonConverter(typeof(OrTypeConverter<bool, ClientSemanticTokensRequestFullDelta>))]
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "full")]
        public OrType<bool, ClientSemanticTokensRequestFullDelta>? Full { get; init; }
    }

}
