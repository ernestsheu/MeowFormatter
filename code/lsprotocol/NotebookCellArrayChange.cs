// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// 
// THIS FILE IS AUTOGENERATED, DO NOT MODIFY IT

using Newtonsoft.Json;
using System.Collections.Immutable;
using System.Runtime.Serialization;

namespace Microsoft.LanguageServer.Protocol {
    /// <summary>
    /// A change describing how to move a `NotebookCell`
    /// array from state S to S'.
    /// 
    /// </summary>
    [Since("3.17.0")]
    [DataContract]
    public record NotebookCellArrayChange
    {
        [JsonConstructor]
        public NotebookCellArrayChange(
            long start,
            long deleteCount,
            ImmutableArray<NotebookCell> cells = default!
        )
        {
            Start = start;
            DeleteCount = deleteCount;
            Cells = cells;
        }
        /// <summary>
        /// The start oftest of the cell that changed.
        /// </summary>
        [DataMember(Name = "start")]
        public long Start { get => start; set => start = Validators.validUInteger(value); }
        private long start;
        /// <summary>
        /// The deleted cells
        /// </summary>
        [DataMember(Name = "deleteCount")]
        public long DeleteCount { get => deleteCount; set => deleteCount = Validators.validUInteger(value); }
        private long deleteCount;
        /// <summary>
        /// The new cells, if any
        /// </summary>
        [JsonConverter(typeof(CustomArrayConverter<NotebookCell>))]
        [DataMember(Name = "cells")]
        public ImmutableArray<NotebookCell> Cells { get; init; }
    }

}
