// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// 
// THIS FILE IS AUTOGENERATED, DO NOT MODIFY IT

using Newtonsoft.Json;
using System.Collections.Immutable;
using System.Runtime.Serialization;

namespace Microsoft.LanguageServer.Protocol {
    [DataContract]
    public record ColorPresentation
    {
        [JsonConstructor]
        public ColorPresentation(
            string label,
            TextEdit? textEdit = null,
            ImmutableArray<TextEdit> additionalTextEdits = default!
        )
        {
            Label = label;
            TextEdit = textEdit;
            AdditionalTextEdits = additionalTextEdits;
        }
        /// <summary>
        /// The label of this color presentation. It will be shown on the color
        /// picker header. By default this is also the text that is inserted when selecting
        /// this color presentation.
        /// </summary>
        [DataMember(Name = "label")]
        public string Label { get; init; }
        /// <summary>
        /// An <see cref="TextEdit">edit</see> which is applied to a document when selecting
        /// this presentation for the color.  When `falsy` the <see cref="ColorPresentation.label">label</see>
        /// is used.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "textEdit")]
        public TextEdit? TextEdit { get; init; }
        /// <summary>
        /// An optional array of additional <see cref="TextEdit">text edits</see> that are applied when
        /// selecting this color presentation. Edits must not overlap with the main <see cref="ColorPresentation.textEdit">edit</see> nor with themselves.
        /// </summary>
        [JsonConverter(typeof(CustomArrayConverter<TextEdit>))]
        [DataMember(Name = "additionalTextEdits")]
        public ImmutableArray<TextEdit> AdditionalTextEdits { get; init; }
    }

}
