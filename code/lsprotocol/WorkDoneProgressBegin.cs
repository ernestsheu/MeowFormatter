// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// 
// THIS FILE IS AUTOGENERATED, DO NOT MODIFY IT

using Newtonsoft.Json;
using System.Runtime.Serialization;

namespace Microsoft.LanguageServer.Protocol {
    [DataContract]
    public record WorkDoneProgressBegin
    {
        [JsonConstructor]
        public WorkDoneProgressBegin(
            string kind,
            string title,
            bool? cancellable = null,
            string? message = null,
            long? percentage = null
        )
        {
            Kind = kind;
            Title = title;
            Cancellable = cancellable;
            Message = message;
            Percentage = percentage;
        }
        [DataMember(Name = "kind")]
        public string Kind { get; init; } = "begin";
        /// <summary>
        /// Mandatory title of the progress operation. Used to briefly inform about
        /// the kind of operation being performed.
        /// 
        /// Examples: "Indexing" or "Linking dependencies".
        /// </summary>
        [DataMember(Name = "title")]
        public string Title { get; init; }
        /// <summary>
        /// Controls if a cancel button should show to allow the user to cancel the
        /// long running operation. Clients that don't support cancellation are allowed
        /// to ignore the setting.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "cancellable")]
        public bool? Cancellable { get; init; }
        /// <summary>
        /// Optional, more detailed associated progress message. Contains
        /// complementary information to the `title`.
        /// 
        /// Examples: "3/25 files", "project/src/module2", "node_modules/some_dep".
        /// If unset, the previous progress message (if any) is still valid.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "message")]
        public string? Message { get; init; }
        /// <summary>
        /// Optional progress percentage to display (value 100 is considered 100%).
        /// If not provided infinite progress is assumed and clients are allowed
        /// to ignore the `percentage` value in subsequent in report notifications.
        /// 
        /// The value should be steadily rising. Clients are free to ignore values
        /// that are not following this rule. The value range is [0, 100].
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "percentage")]
        public long? Percentage { get => percentage; set => percentage = Validators.validUInteger(value); }
        private long? percentage;
    }

}
