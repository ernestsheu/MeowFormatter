// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// 
// THIS FILE IS AUTOGENERATED, DO NOT MODIFY IT

using Newtonsoft.Json;
using System.Collections.Immutable;
using System.Runtime.Serialization;

namespace Microsoft.LanguageServer.Protocol {
    /// <summary>
    /// </summary>
    [Since("3.16.0")]
    [DataContract]
    public record SemanticTokens
    {
        [JsonConstructor]
        public SemanticTokens(
            ImmutableArray<long> data,
            string? resultId = null
        )
        {
            ResultId = resultId;
            Data = data;
        }
        /// <summary>
        /// An optional result id. If provided and clients support delta updating
        /// the client will include the result id in the next semantic token request.
        /// A server can then instead of computing all semantic tokens again simply
        /// send a delta.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "resultId")]
        public string? ResultId { get; init; }
        /// <summary>
        /// The actual tokens.
        /// </summary>
        [JsonConverter(typeof(CustomArrayConverter<long>))]
        [DataMember(Name = "data")]
        public ImmutableArray<long> Data { get; init; }
    }

}
