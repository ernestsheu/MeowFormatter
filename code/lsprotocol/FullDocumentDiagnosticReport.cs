// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// 
// THIS FILE IS AUTOGENERATED, DO NOT MODIFY IT

using Newtonsoft.Json;
using System.Collections.Immutable;
using System.Runtime.Serialization;

namespace Microsoft.LanguageServer.Protocol {
    /// <summary>
    /// A diagnostic report with a full set of problems.
    /// 
    /// </summary>
    [Since("3.17.0")]
    [DataContract]
    public record FullDocumentDiagnosticReport
    {
        [JsonConstructor]
        public FullDocumentDiagnosticReport(
            string kind,
            ImmutableArray<Diagnostic> items,
            string? resultId = null
        )
        {
            Kind = kind;
            ResultId = resultId;
            Items = items;
        }
        /// <summary>
        /// A full document diagnostic report.
        /// </summary>
        [DataMember(Name = "kind")]
        public string Kind { get; init; } = "full";
        /// <summary>
        /// An optional result id. If provided it will
        /// be sent on the next diagnostic request for the
        /// same document.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "resultId")]
        public string? ResultId { get; init; }
        /// <summary>
        /// The actual items.
        /// </summary>
        [JsonConverter(typeof(CustomArrayConverter<Diagnostic>))]
        [DataMember(Name = "items")]
        public ImmutableArray<Diagnostic> Items { get; init; }
    }

}
