// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// 
// THIS FILE IS AUTOGENERATED, DO NOT MODIFY IT

using Newtonsoft.Json;
using System.Runtime.Serialization;

namespace Microsoft.LanguageServer.Protocol {
    /// <summary>
    /// An inline completion item represents a text snippet that is proposed inline to complete text that is being typed.
    /// 
    /// </summary>
    [Proposed]
    [Since("3.18.0")]
    [DataContract]
    public record InlineCompletionItem
    {
        [JsonConstructor]
        public InlineCompletionItem(
            OrType<string, StringValue> insertText,
            string? filterText = null,
            Range? range = null,
            CommandAction? command = null
        )
        {
            InsertText = insertText;
            FilterText = filterText;
            Range = range;
            Command = command;
        }
        /// <summary>
        /// The text to replace the range with. Must be set.
        /// </summary>
        [JsonConverter(typeof(OrTypeConverter<string, StringValue>))]
        [DataMember(Name = "insertText")]
        public OrType<string, StringValue> InsertText { get; init; }
        /// <summary>
        /// A text that is used to decide if this inline completion should be shown. When `falsy` the <see cref="InlineCompletionItem.insertText" /> is used.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "filterText")]
        public string? FilterText { get; init; }
        /// <summary>
        /// The range to replace. Must begin and end on the same line.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "range")]
        public Range? Range { get; init; }
        /// <summary>
        /// An optional <see cref="Command" /> that is executed *after* inserting this completion.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "command")]
        public CommandAction? Command { get; init; }
    }

}
