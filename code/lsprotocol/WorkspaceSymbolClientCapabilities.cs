// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// 
// THIS FILE IS AUTOGENERATED, DO NOT MODIFY IT

using Newtonsoft.Json;
using System.Runtime.Serialization;

namespace Microsoft.LanguageServer.Protocol {
    /// <summary>
    /// Client capabilities for a <see cref="WorkspaceSymbolRequest" />.
    /// </summary>
    [DataContract]
    public record WorkspaceSymbolClientCapabilities
    {
        [JsonConstructor]
        public WorkspaceSymbolClientCapabilities(
            bool? dynamicRegistration = null,
            ClientSymbolKindOptions? symbolKind = null,
            ClientSymbolTagOptions? tagSupport = null,
            ClientSymbolResolveOptions? resolveSupport = null
        )
        {
            DynamicRegistration = dynamicRegistration;
            SymbolKind = symbolKind;
            TagSupport = tagSupport;
            ResolveSupport = resolveSupport;
        }
        /// <summary>
        /// Symbol request supports dynamic registration.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "dynamicRegistration")]
        public bool? DynamicRegistration { get; init; }
        /// <summary>
        /// Specific capabilities for the `SymbolKind` in the `workspace/symbol` request.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "symbolKind")]
        public ClientSymbolKindOptions? SymbolKind { get; init; }
        /// <summary>
        /// The client supports tags on `SymbolInformation`.
        /// Clients supporting tags have to handle unknown tags gracefully.
        /// 
        /// </summary>
        [Since("3.16.0")]
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "tagSupport")]
        public ClientSymbolTagOptions? TagSupport { get; init; }
        /// <summary>
        /// The client support partial workspace symbols. The client will send the
        /// request `workspaceSymbol/resolve` to the server to resolve additional
        /// properties.
        /// 
        /// </summary>
        [Since("3.17.0")]
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
        [DataMember(Name = "resolveSupport")]
        public ClientSymbolResolveOptions? ResolveSupport { get; init; }
    }

}
